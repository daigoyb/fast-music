generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Student {
    id            Int             @id @default(autoincrement())
    studentName   String
    studentEmail  String          @unique
    // Add other student-related fields here
    purchases     Purchase[]
    videoProgress VideoProgress[]
}

model Video {
    id               Int             @id @default(autoincrement())
    videoTitle       String
    videoDescription String
    videoUrl         String
    submoduleId      Int
    submodule        Submodule       @relation(fields: [submoduleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    duration         Float
    // Add other video-related fields here
    videoProgress    VideoProgress[]

    @@index([submoduleId])
}

model Purchase {
    id           Int         @id @default(autoincrement())
    purchaseDate DateTime
    studentId    Int
    submoduleId  Int
    endDate      DateTime
    student      Student     @relation(fields: [studentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    submodule    Submodule[] // m-n implicit relation

    @@index([submoduleId])
    @@index([studentId])
}

model Submodule {
    id                   Int        @id @default(autoincrement())
    submoduleName        String
    submoduleDescription String
    submoduleDifficulty  String
    instrument           String
    videos               Video[]
    purchases            Purchase[] // m-n implicit relation
}

model VideoProgress {
    id                   Int      @id @default(autoincrement())
    watchedDuration      Int // Store the duration in seconds or percentage as needed
    lastWatchedTimestamp DateTime
    studentId            Int
    videoId              Int
    student              Student  @relation(fields: [studentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    video                Video    @relation(fields: [videoId], references: [id], onDelete: Cascade, onUpdate: Cascade)

    // Add other video progress-related fields here
    @@index([studentId])
    @@index([videoId])
}
